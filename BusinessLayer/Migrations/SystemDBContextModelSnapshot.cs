// <auto-generated />
using System;
using BusinessLayer.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessLayer.Migrations
{
    [DbContext(typeof(SystemDBContext))]
    partial class SystemDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RVT_DataLayer.Entities.Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Idbd")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("PreviousHash")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int?>("YearBirth")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BlockId");

                    b.HasIndex("PartyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.FiscData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Idnp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FiscData");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.IdvnAccount", b =>
                {
                    b.Property<string>("Idvn")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusNumber")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VnPassword")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Idvn");

                    b.HasIndex("RegionId");

                    b.ToTable("IdvnAccounts");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PartyId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.Region", b =>
                {
                    b.Property<int>("RegiondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RegiondId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.VoteStatus", b =>
                {
                    b.Property<string>("Idvn")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("VoteState")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Idvn");

                    b.ToTable("VoteStatuses");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.Block", b =>
                {
                    b.HasOne("RVT_DataLayer.Entities.Party", "PartyNavigation")
                        .WithMany("Blocks")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RVT_DataLayer.Entities.Region", "RegionNavigation")
                        .WithMany("Blocks")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyNavigation");

                    b.Navigation("RegionNavigation");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.IdvnAccount", b =>
                {
                    b.HasOne("RVT_DataLayer.Entities.Region", "Region")
                        .WithMany("IdvnAccounts")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.VoteStatus", b =>
                {
                    b.HasOne("RVT_DataLayer.Entities.IdvnAccount", "IdvnAccount")
                        .WithOne("VoteStatus")
                        .HasForeignKey("RVT_DataLayer.Entities.VoteStatus", "Idvn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdvnAccount");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.IdvnAccount", b =>
                {
                    b.Navigation("VoteStatus");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.Party", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("RVT_DataLayer.Entities.Region", b =>
                {
                    b.Navigation("Blocks");

                    b.Navigation("IdvnAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
